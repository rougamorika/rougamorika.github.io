[{"title":"Paul Halmos 的信条","url":"/2025/07/07/CM/","content":"How to deal with Mathematics Don’t just read it; fight it!\n Ask your own questions, look for your own examples, discover your own proofs.\n Is the hypothesis necessary? Is the converse true? What happens in the classical special case? What about the degenerate cases? Where does the proof use the hypothesis?\n\n 数学不要只阅读 要与它搏斗\n 提出你自己的问题， 寻找你自己的例证，发现你自己的证明。\n假设是必需的吗？逆命题也为真吗？经典的特例，是何光景？退化的情形，又当如何？在那证明的每一小步,是在哪里用到了假设？\n","categories":["数学思想"],"tags":["数学思想"]},{"title":"模拟合约 07-07","url":"/2025/07/07/0707-div1/","content":"作战指令：行列解析行动代号： 象限解构任务建议O.A.： 2000+行动总览： 博士，情报部门已标记三组需优先处理的行列式问题。其结构具有典型性，请您进行解析与计算，为后续的代数理论应用铺平道路。\n\n目标 1.1：组合数行列式情报来源： 大连理工大学，2009年任务详情： 计算下列 n 阶行列式：\n\n|A| = \\begin{vmatrix}\n1 & 1 & \\cdots & 1 \\\\\n1 & C_2^1 & \\cdots & C_n^1 \\\\\n1 & C_3^2 & \\cdots & C_{n+1}^2 \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\n1 & C_n^{n-1} & \\cdots & C_{2n-2}^{n-1}\n\\end{vmatrix} \\quad (1.1)\n目标 1.2：爪型行列式情报来源： 内部资料库任务详情： 计算 n 阶行列式，其中 $a_i \\ne 0 (2 \\le i \\le n)$:\n\n|A| = \\begin{vmatrix}\na_1 & b_2 & b_3 & \\cdots & b_n \\\\\nc_2 & a_2 & 0 & \\cdots & 0 \\\\\nc_3 & 0 & a_3 & \\cdots & 0 \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\nc_n & 0 & 0 & \\cdots & a_n\n\\end{vmatrix} \\quad (1.2)\n目标 1.3：参数矩阵设定情报来源： 南京理工大学，2005年；首都师范大学，2009年任务详情： 设：\n\nA_n = \\begin{pmatrix}\n1+a_1 & 1 & \\cdots & 1 \\\\\n1 & 1+a_2 & \\cdots & 1 \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\n1 & 1 & \\cdots & 1+a_n\n\\end{pmatrix} \\quad (1.3)\n博士，期待您的计算结果。\n","categories":["PEUS 竞赛"],"tags":["div2"]},{"title":"LOGOStoolbox-生成函数(1)","url":"/2025/07/09/gene-func/","content":"生成函数的发展史生成函数(Generating Function),有的时候也叫做母函数,是一种形式幂级数.也就是说,它就是长成幂级数的样子,但是我们不用考虑幂级数的敛散性.形式幂级数可以讨论其环结构和拓扑结构.但是我们这里不介绍(有待LOGOS解析完毕后再介绍).\n母函数最早由P.S.Laplace命名,但是其实比他更早的 De Moivre 就已经提出了母函数的概念并广泛地解决一般的线性重复问题.其实Euler和Bernoulli的时代大家就已经不加命名与解释地使用母函数来组合分析和数论问题.所以我们也将从他们的案例出发介绍这个工具,以便各位博士能够更好地应用这个工具解决PEUS中遇到的敌人.\n引用Wlif先生的一句名言:A generating function is a clothesline on which we hang up a sequence of numbers for display.\n生成函数在求解数列通项上的使用通项公式首先我们来看一个数列\n\n2,4,6,8,10,12,14\\dots细心的同志可能会觉得,这不就是偶数序列嘛.可是如果省略号中有不是偶数的数,那么我们就不能称它是偶数序列.所以,为绝后患,你将这个序列写成了下面的形式.(在今天的讨论中,默认$n$是自然数集的元素)\n\na_{n}=2n+2这下大家都皆大欢喜了,很高兴地将上面的函数叫做数列的通项公式.\n递推式LOGOS的同志喜欢搞抽象,每一次都得找出数列的特征太麻烦了.有些时候我只能知道这个数列部分的特性,能不能也找出数列的规律呢?这个当然可以,只要数列所有之后的特性都可以由前面已知的信息推导出来就可以了嘛!于是我们讨论了下面这个序列\n\na_{n+1}=a_{n}^{2},a_{0}=\\sqrt{2}那么这个时候我们要怎么求出通项公式呢?如果一次一次带入求a_{1000}将是极其复杂的.此时聪明的你注意到\n\na_{n}=(a_{n-1})^2=(a_{n-2})^{2^{2}}=(a_{n-3})^{2^{3}}总是能递归到n=0的,于是你将上面的改写\n\n(a_{n})^{2^{0}}=(a_{n-1})^{2^{1}}=(a_{n-2})^{2^{2}}=(a_{n-3})^{2^{3}}所以你得到\n\na_{n}=(a_{n-k})^{2^{k}},0\\leq k\\leq n带入k=n和初始条件得到\n\na_{n}=(\\sqrt{2})^{2^{n}}恭喜你得到了封闭形式!但是你发现你的快乐到此为止了.\n这是可以计算的? Lucas 数列LOGOS的众人们解决了这个问题,但是很快发现他们的工具箱不够用了,隆重介绍:Lucas 数列.Lucas 数列是为了解决 Fibonacci 数列而引入的一种新的数列,它和 Fibonacci 数列极其相似,只有初值不同.\n\nL_{n+2}=L_{n+1}+L_{n},L_{0}=2,L_{1}=1LOGOS的同志发现自己对这样的数列根本就没有思路,行动失败了.在复盘的时候,他们发现了这样的一种工具.假如我们将 Lucas 数列的每一项都变成成一个幂级数对应的系数,那么我们就可以用处理幂级数的方法来处理 Lucas 数列.我们可以这样写我们的幂级数\n\nL(x)=\\sum_{k=0}^{\\infty}L_{k}x^{k}=L_{0}+L_{1}x+L_{2}x^{2}+\\dots而我们无需考虑幂级数的敛散性,因为我们关注的是系数而不是幂级数的值,我们只是借用幂级数的形式.那么我们可以作如下的处理,首先我们可以得到\n\nxL(x)=\\sum_{k=0}^{\\infty}L_{k}x^{k+1}=L_{0}x+L_{1}x^{2}+L_{2}x^{3}+\\dots\nx^{2}L(x)=\\sum_{k=0}^{\\infty}L_{k}x^{k+1}=\\ L_{0}x^{2}+L_{1}x^{3}+L_{2}x^{4}+\\dots为了能够用上Lucas递推数列的性质,我们用下面的两个式子相加减去第一个式子,则右侧所有$x^{2}$以上的项目都可以消去得到下面的简单表达\n\n(x^{2}+x-1)L(x)=(L_{0}-L_{1})x-L_{0}由于已知初始条件,带入可得\n\n(x^{2}+x-1)L(x)=x-2即\n\nL(x)=\\frac{x-2}{x^{2}+x-1}看到这里,LOGOS解出这个形式幂级数的封闭形式! 可是通项是系数的通项,所以还得将其展开,但是这次要求其系数的封闭形式.LOGOS凭借自己的经验,意识到,有理分式函数可以拆解成多个分式函数的和.首先要对下面的方程式因式分解.注意到下面的两个解分别为\n\nx=\\frac{-1\\pm \\sqrt{5}}{2}这太难写了,我们就记正的为$\\Phi$,负的为$\\Psi$,我们可以得出\n\n\\frac{x-2}{x^{2}+x-1}=\\frac{a}{x-\\Phi}+\\frac{b}{x-\\Psi}只要求解上面的方程就可以了\n\nx-2=a(x-\\Psi)+b(x-\\Phi)=(a+b)x-a\\Psi-b\\Phi对应得出二元方程\n\na=\\frac{1-\\sqrt{5}}{2}=-\\Phi,b=\\frac{1+\\sqrt{5}}{2}=-\\Psi所以我们可以写成\n\n\\frac{x-2}{x^{2}+x-1}=\\frac{-\\Phi}{x-\\Phi}+\\frac{-\\Psi}{x-\\Psi}=\\frac{1}{1-\\frac{x}{\\Phi}}+\\frac{1}{1-\\frac{x}{\\Psi}}所以后两者都是幂函数的幂级数,自然可以展开\n\n\\frac{1}{1-\\frac{x}{\\Phi}}=1+\\frac{x}{\\Phi}+\\frac{x^{2}}{\\Phi^{2}}+\\dots+\\frac{x^{n}}{\\Phi^{n}}\n\\frac{1}{1-\\frac{x}{\\Psi}}=1+\\frac{x}{\\Psi}+\\frac{x^{2}}{\\Psi^{2}}+\\dots+\\frac{x^{n}}{\\Psi^{n}}所以注意到\n\nL_{n}=\\Phi^{-n}+\\Psi^{-n}什么?!!!!!!!!!!!!!一个全是整数的数列的通项公式竟然是两个无理数的和!!!这是怎么样都想不到啊.上面的公式,现在我们叫它 Lucas 数列的 Binet 公式\n利用生成函数解决找零问题LOGOS 发现在有些地区还在使用传统的理智值进行交易,许多人都会去理智值小卖部购买相关的商品/装备,理智值的小面值有1点,5点,10点和20点.许多人并不会直接给你凑好的理智值,他们会给你一张大面值的理智值兑换券,比如100点的,你必须要找零.作为小卖部的老板总是不希望自己的零钱用完以至于无法做生意,老板希望LOGOS的组员帮助他解决这个找零的问题.形式化的,即给定一个输入n,已知x=1,y=5,z=10,w=20,试解决下面的最优化问题\n\n    ax+by+cz+dw=n,\\text{最小化}\\quad m=a+b+c+dLOGOS当中的算法部门选择使用动态规划来解决这样的问题,他们完成了一个程序.在此之前,他们需要我们解决一个前置问题,那就是数据量到底有多大?形式化地说,他们需要我们求出所有满足分拆条件的拆分方式的种类数\n我们可以用生成函数来解决这个问题,这是因为生成函数的本质是多项式的指数相加规则和组合累加规则是同构的.我们可以这样来看:首先是使用一点的理智值,每多用一点我们就让多项式的指数加1,所以我们可以知道如果都用1点,我们的生成函数就会长成这样:\n\nC_{1}(x)=1+x+x^{2}+x^{3}+...此时多项式的系数就表示我们描述这个钱币和的种类数,显然如果我们只用1理智值的钱币,无论什么面值的找零都只有一种方式,那就是n个1.不妨来看面值为5的情况\n\nC_{5}(x)=1+x^{5}+x^{10}+x^{15}+...同样的这也贡献了一些找零的方法.那么我们怎么找钱呢.比如找您12点理智,还记得理智的加法是作用在指数上的嘛,指数相加就意味着这两个幂函数相乘.因此,只要将C_{1}(x)和C_{5}(x)乘在一起,我们就得到了所有的取法(因为多项式乘法是每个都要乘的,相当于遍历所有组合形式).同理,我们只要写出\n\nC_{10}(x)=1+x^{10}+x^{20}+x^{30}+...\nC_{20}(x)=1+x^{20}+x^{40}+x^{60}+...然后求得\n\nC(x)=C_{1}(x)C_{5}(x)C_{10}(x)C_{20}(x)中x^{n}的系数即可\n很显然,利用形式幂级数,我们还是可以写出\n\nC(x)=\\frac{1}{(1-x)(1-x^{5})(1-x^{10})(1-x^{20})}现在,只要展开它就可以了(累),交给Matlab吧\nclc;clear;% 定义符号变量与函数syms z% G(z) = 1 / ((1-z)(1-z^5)(1-z^10)(1-z^20))denominators = (1 - z) * (1 - z^5) * (1 - z^10) * (1 - z^20);G_func = 1 / denominators;% 设定目标target_n = 48; % 您可以改成任何您想计算的数, 比如 100% 将生成函数展开% 我们需要展开到 &#x27;Order&#x27; n+1 才能得到 z^n 的系数taylor_series = taylor(G_func, z, &#x27;Order&#x27;, target_n + 1);% 打印展开式的前面一部分，以供观察fprintf(&#x27;泰勒级数展开式 (部分): \\n%s\\n\\n&#x27;, char(taylor_series));% 5. 提取 z^n 的系数% coeffs 函数返回多项式的所有系数，从常数项开始升序排列all_coeffs = coeffs(taylor_series, z, &#x27;All&#x27;);% MATLAB 的符号系数可能是从高次项到低次项的，我们需要反转它% &#x27;All&#x27; 参数保证了即使某一项为0，也会返回系数all_coeffs = fliplr(all_coeffs); % 系数向量的第 k 个元素对应 z^(k-1) 的系数% 所以 z^n 的系数在向量的第 n+1 个位置combination_count = all_coeffs(target_n + 1);\n","categories":["数学工具箱"],"tags":["数列","级数论","组合数学"]},{"title":"系统升级通告-01：行动平台迁移计划完成,狄德罗计划的失败","url":"/2025/07/07/info-1/","content":"\n通告ID: RI-NOTICE-[20250707]-SYS01\n通告类型: 系统维护与升级/计划终止\n影响范围: 全体罗德岛干员及博士\n发布方: 罗德岛数理部\n\n\n【通告概要】博士，以及全体干员请注意。\n为了提升情报分发效率、优化任务简报的可读性，并为未来集成更强大的交互模块，罗德岛工程部已完成对本舰核心信息发布平台的全面升级。\n旧有的 MkDocs 信息发布框架（内部代号：“基石”/ Bedrock）已完成其历史使命，光荣退役。自本通告发布起，我们将全面切换至基于 Hexo 架构的新一代行动平台——代号：“棱镜” (Prism)。\n\n【系统迁移详情】旧平台：MkDocs / “基石”“基石”平台在过去的行动中为我们提供了稳定、可靠的服务，其简洁的文档结构支撑了我们无数次理论构建与知识归档。所有历史数据均已安全备份并迁移至新系统数据库，确保无任何情报遗失。\n新平台：Hexo / “棱镜”新平台“棱镜”将带来以下核心优势：\n\n高效渲染引擎: 指令加载与响应速度显著提升，确保您在第一时间接收到关键信息。\n增强型界面: 支持更复杂的战术图表与数据可视化模块，能更直观地展示复杂的理科概念与作战模型。\n高度可扩展性: 为未来接入模拟演算、交互式任务等高级功能预留了接口。我们坚信，技术是战胜天灾的第一生产力。\n\n\n【未来行动展望】博士，这次平台迁移不仅仅是技术迭代，更是我们行动模式的战略升级。\n自即日起，所有理科知识的 [理论阐述] 与 [行动任务发布] 将统一通过“棱镜”平台进行。这里将成为我们解析未知、攻克技术难关的核心阵地。您将在这里接收到：\n\n定期理论讲解: 如同术师干员的技能解析，我们将把复杂的理科知识拆解为清晰易懂的作战单元。\n周期性行动任务: 我们会发布具体的“科研任务”，邀请您一同参与到问题的分析与解决中。\n\n【答诸博士问】为何重新启用博客？博客时效性强,更新方便.\n关于狄德罗计划(暑期培训计划)?作为暑期能力对诸位博士能力提升的狄德罗计划,由于参与人数较少,完成率低而宣告失败.鉴于此,狄德罗计划正式取消.\n社团未来的发展此部分&amp;(&amp;()(&amp;)())这段部分受到整合运动干扰,损坏.\n\n【结语】请博士尽快熟悉新平台的界面与操作流程。您的每一次访问，都是在为罗德岛的知识库注入新的活力。\n技术革新是为了更高效地走向胜利。期待在新平台上与您并肩作战。\n","categories":["其他"],"tags":["罗德岛通知"]},{"title":"LOGOS-信号与系统-1","url":"/2025/07/07/signals-1/","content":"什么是信号\n物理上:一串特定的波形.(信号是波)\n数学上:一个一元/多元的函数.(信号是函数)\n\n从数学的角度理解,不同的定义域会带来不同的信号种类,主要分如下几种\n\n连续信号:\\mathbb{R}\\to \\mathbb{R}\n离散信号:\\mathbb{Z}\\to \\mathbb{R}\n复信号:\\mathbb{C}\\to \\mathbb{R}\n\n连续信号一般写成f(t),离散信号一般写成f[n].类比函数变换,我们也可以对信号做变换\n\n尺度变换 f(t)\\to f(2t),因为是函数的映射,所以一般叫尺度变换算子\n时移 f(t)\\to f(t+\\varphi),时移也是算子\n\n上面两者的组合就是线性变换f(t)\\to f(\\alpha t +\\beta)\n信号的特性周期性就像函数一样,信号也有周期性的概念,且和函数没有区别.只是由于信号的种类不同,符号不一样.我们一般讨论函数的最小正周期,类比过去,我们讨论信号的基波周期,基波周期的符号和信号种类有关.\n\n连续信号 T_{0} \n离散信号 N_{0}\n\n周期性中的特殊例子是常信号,它是周期信号但无基波周期.\n奇偶性正如函数分奇偶,信号也同样可以分成奇偶的.值得重点研究的是下面的内容\n奇偶分解定理任何一个信号总是可以拆成一个奇信号和一个偶信号的和.只要构造这个信号的反信号就可以了,如下是证明构造下面两个函数:\\frac{f(t)+f(-t)}{2}=h(t),\\frac{f(t)-f(-t)}{2}=g(t)可以看出\n\nh(t)+g(t)=f(t)并h(t),g(t)分别是偶函数和奇函数.前者叫做信号的偶部,后者叫奇部.\n例子\n设x[n]=0,n4,对如下信号,确定其信号值一定为0的n的值\nx[n-3]\nx[n+4]\nx[-n]\nx[-n+2]\nx[-n-2]\n\n\n\n只要利用时移特性就可以了,不解释\n\nn=3\nn=-4\nn=0\nn=2\nn=-2\n\n","categories":["自动化理论"],"tags":["信号与系统","数理方法","自动化"]},{"title":"关于“ PEUS 罗德岛之星”系列赛","url":"/PEUS/index.html","content":"行动协议手册注意，干员。 一场前所未有的智力风暴正在接近。为了评估并提升每一位干员在非战斗环境下的逻辑推演与战术规划能力，中央控制终端现已启动 [智域危机合约] 系列行动。\n本次行动将摒弃源石技艺的干扰，回归最纯粹的思维对抗。请证明你的价值。\n\nI. 行动协议总览 (Protocol Overview)本次行动采用梯队分级对抗模式。所有干员将根据其 行动评定 (Operational Aptitude - O.A.) 被编入五个不同的威胁等级梯队，以确保行动目标的匹配度与挑战性。\n1. 行动评定 (Operational Aptitude - O.A.)此为衡量干员逻辑分析与快速决策能力的量化指标。O.A.将根据你在每次行动中的表现进行动态调整，是你在罗德岛智库中排位的唯一凭证。\n2. 威胁等级划分 (Threat Level Classification)根据O.A.，干员将被划入以下五个行动梯队。晋升至更高梯队，是你卓越能力的最好证明。\n\n梯队 I: 宗师 (Navigator): \\text{O.A.} >=2300\n梯队 II: 大师 (Guardian): \\text{O.A.} 2000 - 2300\n梯队 III: 高手 (Vanguard): \\text{O.A.} 1700 - 2000\n梯队 IV: 精英 (Elite): \\text{O.A.} 1200 - 1700\n梯队 V: 璞玉 (Standard): \\text{O.A.}800 - 1200\n\n初始部署： 新晋干员将通过首次 “资格认证” 行动，获取初始O.A.及梯队归属，资格认证行动每两星期一次\n升变：分数高于该梯队最大值将发生干员升变,将获得升变奖励和更高一级最低段位分+100的新段位分.\n\nII. 行动流程指令 (Operational Flow Directive)\n“时间是衡量效率的标尺，但不是唯一。记住，干员，正确的结果永远是第一位的。”\n\n\n战术接入： 干员须准时进入指定作战区域，根据所属梯队入座。\n目标下达： 行动采用纸质情报终端进行。标准作战时长为 120分钟。\n行动结束/撤离： 当你确认所有战术节点均已攻克，可向监察员发出信号。监察员将在你的终端上记录 [行动消耗时间]。\n警告： 一旦选择结束行动，干员必须立即撤离作战区域。禁止对终端进行任何后续修改。\n强制终止： 行动时间耗尽后，所有未撤离干员的行动将被强制终止，其 [行动消耗时间] 统一记为120分钟。\n\n\nIII. 作战效能评估 (Combat Effectiveness Evaluation)你的最终序列排名将由一个复合数据决定——[最终作战效能]。它由两部分构成：\n1. 基础作战效能 (Base Combat Effectiveness - B.C.E.)此数据评估你的基础解构能力与效率。评估矩阵:\nB.C.E. = [基础攻克价值] × (1 + 0.25 × ((120 - [行动消耗时间]) / 120))\n[基础攻克价值]：你攻克的常规战术节点的总分值。\n[行动消耗时间]：从行动开始至你主动撤离所消耗的分钟数。\n0.25：时间压缩增益系数。它能将你节约的时间转化为效能优势。\n\n2. 高危节点攻克奖励 (High-Threat Node Bonus)&gt;\n\n“只有最顶尖的干员，才能在风暴的中心看到出路。”\n\n\n目标识别： 每个梯队情报终端的 最后一个战术节点 被标记为 [高危目标]。\n奖励机制： 成功清除[高危目标]的干员，将在其B.C.E.之上，获得一笔 [额外战术嘉奖]。\n嘉奖额度： 嘉奖数值等于 [高危目标]本身基础价值的50%。\n\n3. 最终行动序列 (Final Operational Sequence)最终作战效能 = 基础作战效能 + 额外战术嘉奖所有干员将根据此最终数值进行排序，决定其在该次行动中的最终排位。\n4.对 O.A. 的影响采用国际象棋中的ELO算法处理数据:ELO计算网站会在每个场比赛之后的第三天公布新的O.A.\n\nIV. 物资配给与嘉奖 (Supply Allocation &amp; Commendation)1. 单次行动物资\n每次行动结束后，将在 各梯队内部 根据 [最终作战效能] 进行独立排名。\n排名前 15% 的干员将获得标准作战嘉奖（内含限定物资与纪念品）。\n[首通奖励]: 每个梯队中，首位 成功攻克[高危目标]并结束行动的干员，将获得一份独特的 [先锋纪念蚀刻章]。\n\n2. 赛季合约结算\n整个合约周期结束后，将进行终极结算。\n届时将颁发 “年度最强干员”、“各梯队首席”、“认知觉醒奖（进步最快）” 等至高荣誉。\n\n\nV. 信息安全协议 (Information Security Protocol)在罗德岛，诚信是干员的基石。任何违反协议的行为（如数据窃取、未经授权的外部通讯等）都将被视为对罗德岛的背叛。一经查实，将立即剥夺其行动资格，并永久封存其干员档案。\n愿你的智慧，成为照亮前路的光。\n&lt;—//:签发: LOGOS 中央控制终端—&gt;&lt;—//:日期: 2025/07/07—&gt;\n"},{"title":"与 LOGOS 合作的组织","url":"/contact/index.html","content":"工具类GithubELO\n数学参考类AOPSMSEMOW-alpha\n优秀博主Pikachu345,B站Fengling’s blog,风铃夜行的博客Terence Tao,陶哲轩的博客3Blue1Brown,B站torsor,复旦大学谢启鸿教授,B站我真的不懂分析,清华大学刘思齐教授,B站\n娱乐时刻数独国际象棋\n"},{"title":"对PRTS数学演算模块的介绍","url":"/about/index.html","content":"介绍PRTS 数学演算模块 是一个由 Rhodes Island of PEUS 旗下 Logic &amp; Order Guardians of Science (下简称LOGOS部门)开发的真理知识库,旨在在后源石感染时代最大化保留 PEUS 地区的数理知识.\nPRTS 是一个逻辑推演模块.这就是说 LOGOS 的文风就是:推导和实践.我们希望我们引出的每个习题,讲解的每个方法都可以为罗德岛的各位博士使用.与此同时,PRTS 是 LOGOS 先前失败的 Diderot 计划的一个续篇.代号 Neu-Diderot 计划.\nNeu-Diderot 计划保存的记忆种类繁多,可以通过 Categories 板块访问.于此同时,不同的内容也建立的逻辑的联系,可以通过 tags 板块来搜索.\n主要贡献者\nRougamorika: 系统搭建,方法论,复分析\nIhtw: 案例分析\n\n结语愿 LOGOS 和 Rhodes Island 的荣光永在!\n"}]